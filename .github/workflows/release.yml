name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v1.0.0'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-web:
    name: Build Web App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build

      - name: Create web archive
        run: |
          cd docs
          tar -czf ../click-rippler-web.tar.gz .
          cd ..
          zip -r click-rippler-web.zip docs/

      - name: Upload web artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: |
            click-rippler-web.tar.gz
            click-rippler-web.zip

  build-desktop:
    name: Build Desktop Apps
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
            arch: 'arm64'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            target: 'x86_64-apple-darwin'
            arch: 'x64'
          - platform: 'ubuntu-22.04'
            args: ''
            target: 'x86_64-unknown-linux-gnu'
            arch: 'x64'
          - platform: 'windows-latest'
            args: ''
            target: 'x86_64-pc-windows-msvc'
            arch: 'x64'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Click Rippler ${{ github.ref_name }}'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  build-mobile:
    name: Build Mobile Apps
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            target: 'ios'
          - platform: 'ubuntu-22.04'
            target: 'android'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup iOS (macOS only)
        if: matrix.target == 'ios'
        run: |
          rustup target add aarch64-apple-ios
          rustup target add x86_64-apple-ios
          rustup target add aarch64-apple-ios-sim

      - name: Setup Android (Ubuntu only)
        if: matrix.target == 'android'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          rustup target add aarch64-linux-android
          rustup target add armv7-linux-androideabi
          rustup target add i686-linux-android
          rustup target add x86_64-linux-android

      - name: Setup Android SDK (Ubuntu only)
        if: matrix.target == 'android'
        uses: android-actions/setup-android@v3

      - name: Setup Android NDK (Ubuntu only)
        if: matrix.target == 'android'
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "NDK_HOME=$ANDROID_HOME/ndk-bundle" >> $GITHUB_ENV

      - name: Setup Java (Android only)
        if: matrix.target == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Initialize Tauri mobile project
        run: |
          if [ "${{ matrix.target }}" = "ios" ]; then
            npm run ios:init || echo "iOS project may already be initialized"
          elif [ "${{ matrix.target }}" = "android" ]; then
            npm run android:init || echo "Android project may already be initialized"
          fi

      - name: Build mobile app
        run: |
          if [ "${{ matrix.target }}" = "ios" ]; then
            npm run ios:build
          elif [ "${{ matrix.target }}" = "android" ]; then
            npm run android:build
          fi

      - name: Upload mobile artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-build
          path: |
            src-tauri/gen/**/*.ipa
            src-tauri/gen/**/*.apk
            src-tauri/gen/**/*.aab
            src-tauri/target/**/*.ipa
            src-tauri/target/**/*.apk
            src-tauri/target/**/*.aab
          if-no-files-found: warn

  create-release:
    name: Create Release
    needs: [build-web, build-desktop, build-mobile]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: 'Click Rippler ${{ github.ref_name }}'
          body: |
            ## Click Rippler ${{ github.ref_name }}

            ### Desktop Applications
            - **Windows**: Download the `.msi` installer or `.exe` portable version
            - **macOS**: Download the `.dmg` installer or `.app` bundle
            - **Linux**: Download the `.deb`, `.rpm`, or `.AppImage` package

            ### Mobile Applications
            - **iOS**: Download the `.ipa` file (requires signing for installation)
            - **Android**: Download the `.apk` file for direct installation or `.aab` for Play Store

            ### Web Application
            - **Web**: Download the web archive and serve the files on any web server

            ### Installation Instructions

            #### Desktop
            1. Download the appropriate file for your operating system
            2. Run the installer or extract the portable version
            3. Launch Click Rippler from your applications menu

            #### Mobile
            - **iOS**: Requires Xcode or a signing service to install the .ipa file
            - **Android**: Enable "Install from unknown sources" and install the .apk file

            #### Web
            1. Extract the web archive to your web server
            2. Serve the files through any HTTP server
            3. Access through your web browser

          files: |
            **/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
